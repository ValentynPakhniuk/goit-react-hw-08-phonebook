{"version":3,"file":"static/js/984.8342d1e9.chunk.js","mappings":"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","sources":["components/ContactForm/ContainerForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/FilterBox.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  border: 1px solid black;\n\n  & Button {\n    width: 100px;\n  }\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 15px auto 15px 15px;\n  & div {\n    display: flex;\n    flex-direction: column;\n\n    & input {\n      width: 150px;\n    }\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterSearchValue = state => state.filter;\n\nexport const selectVisibleContact = createSelector(\n  [selectContact, selectFilterSearchValue],\n  (contacts, filter) => {\n    return filter\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contacts;\n  }\n);\n","import { Button } from 'components/Button/Button.styled';\nimport { Box, FormContact } from './ContainerForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from 'redux/Contacts/operations';\nimport {\n  selectIsLoading,\n  selectVisibleContact,\n} from 'redux/Contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectVisibleContact);\n\n  const handleClick = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const isContactExists = contacts.some(contact => contact.name === name);\n    if (isContactExists) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(addContactsThunk({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <FormContact onSubmit={handleClick}>\n      <Box>\n        <div>\n          <label htmlFor=\"exampleInputName\">Name</label>\n          <input\n            type=\"text\"\n            id=\"exampleInputName\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"exampleInputNumber\">Number</label>\n          <input\n            type=\"tel\"\n            id=\"exampleInputNumber\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </Box>\n    </FormContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 15px auto 15px 0px;\n  & input {\n    width: 150px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterBox } from './FilterBox.styled';\nimport { setFilterSearchValue } from 'redux/Contacts/filterSlice';\nimport { selectFilterSearchValue } from 'redux/Contacts/selectors';\n\nexport const Filter = () => {\n  const filterSearchValue = useSelector(selectFilterSearchValue);\n  const dispatch = useDispatch();\n  const handleFilter = e => dispatch(setFilterSearchValue(e.target.value));\n\n  return (\n    <FilterBox>\n      <label htmlFor=\"filterInputName\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        id=\"filterInputName\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filterSearchValue}\n        onChange={handleFilter}\n      />\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  & div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n","import { Button } from 'components/Button/Button.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Item } from './ContactItem.styled';\nimport { deleteContactsThunk } from 'redux/Contacts/operations';\nimport { useState } from 'react';\nimport { selectIsLoading } from 'redux/Contacts/selectors';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const [contactId, setContactId] = useState(null);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContactsThunk(id));\n    setContactId(id);\n  };\n  return (\n    <Item key={id}>\n      <div>\n        <p>\n          {name}: {number}\n        </p>\n        <Button\n          type=\"button\"\n          onClick={() => handleDelete()}\n          disabled={isLoading && contactId === id}\n        >\n          Delete\n        </Button>\n      </div>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContact } from 'redux/Contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContact);\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return <ContactItem contact={contact} key={contact.id} />;\n      })}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContactsThunk } from 'redux/Contacts/operations';\nimport { ContainerContacts } from 'components/Container.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'redux/Contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n  return (\n    <ContainerContacts>\n      <h2>Phonebook</h2>\n      <ContactForm />\n\n      <h3>Contacts</h3>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <b>Request in progress...</b>}\n    </ContainerContacts>\n  );\n};\nexport default PhoneBook;\n"],"names":["FormContact","styled","Box","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectIsLoading","state","contacts","isLoading","selectError","error","selectFilterSearchValue","filter","selectVisibleContact","items","contact","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","elements","number","some","alert","addContactsThunk","reset","htmlFor","type","id","pattern","title","required","disabled","FilterBox","Filter","filterSearchValue","onChange","e","setFilterSearchValue","Item","ContactItem","useState","contactId","setContactId","onClick","deleteContactsThunk","ContactList","useEffect","fetchContactsThunk"],"sourceRoot":""}